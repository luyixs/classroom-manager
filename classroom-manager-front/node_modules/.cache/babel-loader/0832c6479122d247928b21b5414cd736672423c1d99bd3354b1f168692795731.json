{"ast":null,"code":"import { nanoid } from 'nanoid';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      addDialogVisible: false,\n      //是否显示添加授课对话框\n\n      loginUser: null,\n      lectureOptions: {\n        week: ['周一', '周二', '周三', '周四', '周五'],\n        section: ['第一大节', '第二大节', '第三大节', '第四大节', '第五大节', '第六大节'],\n        // myLectures: [{cId: 'qwe123', cName: 'java'}, {cId: 'asd123', cName: 'C#'}],\n        myLectures: [],\n        credit: [1, 2, 3, 4],\n        academy: ['全部', '计算机学院', '艺术学院', '医学院', '理学院'],\n        lectureDayofWeek: '周一',\n        lectureSection: '第一大节'\n      },\n      lectureData: {\n        cId: '',\n        cName: '',\n        teacherId: '',\n        //从后台获取\n        credit: null,\n        limit: null,\n        classRoom: '',\n        timeRange: '',\n        type: '必修',\n        academy: '',\n        cIntro: '课程介绍...'\n      }\n    };\n  },\n  watch: {\n    lectureOptions: {\n      deep: true,\n      immediate: true,\n      handler(newVal, oldVal) {\n        // console.log(newVal,' ',oldVal)\n        this.lectureData.timeRange = newVal.lectureDayofWeek + '_' + newVal.lectureSection;\n      }\n    }\n  },\n  computed: {},\n  methods: {\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n    handleChangeCourseId() {\n      //根据选择的课程id填充对应的课程信息\n    },\n    handleRefreshCourseId() {\n      this.lectureData.cId = nanoid(6);\n      // 清除lectureData部分信息\n    },\n\n    //添加课程\n    handleAddLecture() {\n      console.log(this.lectureData);\n      axios({\n        method: 'POST',\n        url: '/lecture/add',\n        data: {\n          lecture: this.lectureData\n        }\n      }).then(rsp => {\n        console.log(rsp.data);\n        if (rsp.data.success) {\n          this.$message({\n            message: '添加成功！',\n            type: 'success'\n          });\n          this.addDialogVisible = false;\n        } else {\n          this.$message(\"添加失败\");\n        }\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {\n        this.$bus.$emit('getLectureList', ''); //通知leccture组件更新数据\n      });\n    },\n\n    //弹出添加课程对话框初始化数据\n    handleShowAddDialog() {\n      //清空lectureData中的值\n      Object.keys(this.lectureData).forEach(key => this.lectureData[key] = null);\n      var sourceTpl = {\n        teacherId: this.loginUser.id,\n        type: '必修',\n        cIntro: '课程介绍...',\n        timeRange: '周一_第一大节'\n      };\n      //将默认模板分配给表单\n      this.lectureData = Object.assign(this.lectureData, sourceTpl);\n      if (this.loginUser.role == 'student') {\n        this.$message(\"你的身份为学生，不能添加授课！\");\n        return;\n      } else {\n        this.addDialogVisible = true;\n      }\n    },\n    setLoginUser() {\n      this.loginUser = this.getCookie('loginUser');\n    },\n    setCookie(key, value) {\n      Cookies.set(key, JSON.stringify(value));\n    },\n    getCookie(key) {\n      console.log('AddLecture getCookie 被调用');\n      let cookieValue = Cookies.get(key);\n      if (cookieValue == undefined) {\n        return null; //cookie未定义\n      }\n\n      return JSON.parse(Cookies.get(key));\n    }\n  },\n  created() {},\n  mounted() {\n    console.log('AddLecture 挂载');\n    this.setLoginUser();\n    this.$bus.$on('handleShowAddDialog', this.handleShowAddDialog); //接受弹出的通知\n  },\n\n  beforeDestroy() {\n    this.$bus.$off('handleShowAddDialog');\n  }\n};","map":{"version":3,"mappings":"AA4EA;AACA;AACA;AACA;EACAA;EACAC;EACAC;IACA;MACAC;MAAA;;MAEAC;MAEAC;QACAC;QACAC;QACA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAC;QACAC;QACAC;QAAA;QACAP;QACAQ;QACAC;QACAC;QACAC;QACAV;QACAW;MACA;IACA;EACA;EACAC;IACAjB;MACAkB;MACAC;MACAC;QACA;QACA;MACA;IACA;EACA;EACAC;EACAC;IAEAC;MACA;QACAC;MACA,eACA;IACA;IACAC;MACA;IAAA,CACA;IACAC;MACA;MACA;IACA;;IACA;IACAC;MACAC;MACAC;QAAAC;QAAAC;QAAAlC;UAAAmC;QAAA;MAAA;QACAJ;QACA;UACA;YAAAK;YAAAlB;UAAA;UACA;QACA;UACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;;IACA;IACAmB;MACA;MACAC;MACA;QAAAxB;QAAAI;QAAAC;QAAAF;MAAA;MACA;MACA;MACA;QACA;QACA;MACA;QACA;MACA;IACA;IAEAsB;MACA;IACA;IACAC;MACAC;IACA;IACAC;MACAX;MACA;MACA;QACA;MACA;;MACA;IACA;EAEA;EACAY;EACAC;IACAb;IACA;IACA;EACA;;EACAc;IACA;EACA;AACA","names":["components","props","data","addDialogVisible","loginUser","lectureOptions","week","section","myLectures","credit","academy","lectureDayofWeek","lectureSection","lectureData","cId","cName","teacherId","limit","classRoom","timeRange","type","cIntro","watch","deep","immediate","handler","computed","methods","handleClose","done","handleChangeCourseId","handleRefreshCourseId","handleAddLecture","console","axios","method","url","lecture","message","handleShowAddDialog","Object","setLoginUser","setCookie","Cookies","getCookie","created","mounted","beforeDestroy"],"sourceRoot":"src/components/MyLecture","sources":["AddLecture.vue"],"sourcesContent":["<template>\r\n  <!--添加授课对话框  -->\r\n  <el-dialog title=\"添加授课\" :visible.sync=\"addDialogVisible\" width=\"500px\" :before-close=\"handleClose\">\r\n    <el-form label-width=\"80px\" :model=\"lectureData\"  method=\"post\">\r\n      <el-form-item label=\"教师ID:\">\r\n        <el-input  v-model=\"lectureData.teacherId\" :disabled=\"true\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"课程ID:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入课程ID\" v-model='lectureData.cId'>\r\n          <el-select v-model=\"lectureData.cId\" @change=\"handleChangeCourseId\" slot=\"prepend\" placeholder=\"从已有的选择\"\r\n            style=\"width:150px ;\">\r\n            <el-option v-for=\"lecture in lectureOptions.myLectures\" :key=\"lecture.cId\" :label=\"lecture.cId\"\r\n              :value=\"lecture.cId\">\r\n              <span>{{ lecture.cId }}</span><span style=\"float: right; color: #8492a6; font-size: 13px\">{{ lecture.cName\r\n              }}</span>\r\n            </el-option>\r\n          </el-select>\r\n          <el-button slot=\"append\" icon=\"el-icon-refresh\" @click=\"handleRefreshCourseId\"></el-button>\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"课程名称:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入课程名称\" v-model=\"lectureData.cName\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"学分:\" size=\"medium\" style=\"width: 280px;\">\r\n        <el-select v-model=\"lectureData.credit\" placeholder=\"请选择\">\r\n          <el-option v-for=\"item in lectureOptions.credit\" :key=\"item\" :label=\"item\" :value=\"item\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"人数限制:\" size=\"medium\">\r\n        <el-input-number v-model=\"lectureData.limit\" controls-position=\"right\" :min=\"1\" :max=\"200\">\r\n        </el-input-number>\r\n      </el-form-item>\r\n      <el-form-item label=\"教室:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入教室\" v-model=\"lectureData.classRoom\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"上课时间:\" size=\"medium\">\r\n        <el-select v-model=\"lectureOptions.lectureDayofWeek\" placeholder=\"周一\" size=\"mini\" style=\"width: 100px;\">\r\n          <el-option v-for=\"day in lectureOptions.week \" :key=\"day\" :label=\"day\" :value=\"day\"></el-option>\r\n        </el-select>\r\n        <el-select v-model=\"lectureOptions.lectureSection\" placeholder=\"第一大节\" size=\"mini\" style=\"width: 100px;\">\r\n          <el-option v-for=\"section in lectureOptions.section\" :key=\"section\" :label=\"section\" :value=\"section\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"选修类型\" size=\"medium\">\r\n        <el-radio v-model=\"lectureData.type\" label=\"必修\">必修</el-radio>\r\n        <el-radio v-model=\"lectureData.type\" label=\"选修\">选修</el-radio>\r\n      </el-form-item>\r\n      <el-form-item label=\"可选院系:\" size=\"medium\">\r\n        <el-select v-model=\"lectureData.academy\" placeholder=\"院系\" size=\"mini\" style=\"width: 100px;\">\r\n          <el-option v-for=\"academy in lectureOptions.academy\" :key=\"academy\" :label=\"academy\" :value=\"academy\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"课程介绍:\">\r\n        <el-input type=\"textarea\" placeholder=\"请输入课程介绍...\" v-model=\"lectureData.cIntro\" maxlength=\"200\" show-word-limit>\r\n        </el-input>\r\n\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <p class=\"red\">\r\n      <b>注意：</b><span>若只是添加课程节次，不修改课程，则课程ID、课程名称、人数限制、学分应与之前保持一致，只需要更改教室和上课时间，否则会创建一门新的课程而不是添加已有的课程节次</span>\r\n\r\n    </p>\r\n\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"handleAddLecture\">确 定</el-button>\r\n    </span>\r\n\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { nanoid } from 'nanoid';\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios';\r\nexport default {\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n      addDialogVisible: false, //是否显示添加授课对话框\r\n\r\n      loginUser: null,\r\n\r\n      lectureOptions: {\r\n        week: ['周一', '周二', '周三', '周四', '周五'],\r\n        section: ['第一大节', '第二大节', '第三大节', '第四大节', '第五大节', '第六大节'],\r\n        // myLectures: [{cId: 'qwe123', cName: 'java'}, {cId: 'asd123', cName: 'C#'}],\r\n        myLectures: [],\r\n        credit: [1, 2, 3, 4],\r\n        academy: ['全部', '计算机学院', '艺术学院', '医学院', '理学院'],\r\n        lectureDayofWeek: '周一',\r\n        lectureSection: '第一大节',\r\n      },\r\n\r\n      lectureData: {\r\n        cId: '',\r\n        cName: '',\r\n        teacherId: '', //从后台获取\r\n        credit: null,\r\n        limit: null,\r\n        classRoom: '',\r\n        timeRange: '',\r\n        type: '必修',\r\n        academy: '',\r\n        cIntro: '课程介绍...',\r\n      },\r\n    };\r\n  },\r\n  watch: {\r\n    lectureOptions: {\r\n      deep: true,\r\n      immediate: true,\r\n      handler(newVal, oldVal) {\r\n        // console.log(newVal,' ',oldVal)\r\n        this.lectureData.timeRange = newVal.lectureDayofWeek + '_' + newVal.lectureSection\r\n      }\r\n    }\r\n  },\r\n  computed: {},\r\n  methods: {\r\n\r\n    handleClose(done) {\r\n      this.$confirm('确认关闭？').then(_ => {\r\n        done();\r\n      }).catch(_ => {\r\n      });\r\n    },\r\n    handleChangeCourseId() {\r\n      //根据选择的课程id填充对应的课程信息\r\n    },\r\n    handleRefreshCourseId() {\r\n      this.lectureData.cId = nanoid(6)\r\n      // 清除lectureData部分信息\r\n    },\r\n    //添加课程\r\n    handleAddLecture() {\r\n      console.log(this.lectureData)\r\n      axios({ method: 'POST', url: '/lecture/add', data: { lecture: this.lectureData } }).then(rsp => {\r\n        console.log(rsp.data)\r\n        if (rsp.data.success) {\r\n          this.$message({ message: '添加成功！', type: 'success' });\r\n          this.addDialogVisible = false;\r\n        } else {\r\n          this.$message(\"添加失败\")\r\n        }\r\n      }, err => {\r\n        this.$message.error(err.message)\r\n      }).finally(() => {\r\n        this.$bus.$emit('getLectureList','') //通知leccture组件更新数据\r\n      })\r\n    },\r\n    //弹出添加课程对话框初始化数据\r\n    handleShowAddDialog(){\r\n      //清空lectureData中的值\r\n      Object.keys(this.lectureData).forEach(key => this.lectureData[key] = null)\r\n      var sourceTpl = { teacherId: this.loginUser.id, type: '必修', cIntro: '课程介绍...',timeRange:'周一_第一大节' }\r\n      //将默认模板分配给表单\r\n      this.lectureData = Object.assign(this.lectureData, sourceTpl)\r\n      if (this.loginUser.role == 'student') {\r\n        this.$message(\"你的身份为学生，不能添加授课！\");\r\n        return;\r\n      } else {\r\n        this.addDialogVisible = true\r\n      }\r\n    },\r\n\r\n    setLoginUser() {\r\n      this.loginUser = this.getCookie('loginUser')\r\n    },\r\n    setCookie(key, value) {\r\n      Cookies.set(key, JSON.stringify(value))\r\n    },\r\n    getCookie(key) {\r\n      console.log('AddLecture getCookie 被调用')\r\n      let cookieValue = Cookies.get(key)\r\n      if (cookieValue == undefined) {\r\n        return null //cookie未定义\r\n      }\r\n      return JSON.parse(Cookies.get(key))\r\n    },\r\n\r\n  },\r\n  created() { },\r\n  mounted() { \r\n    console.log('AddLecture 挂载')\r\n    this.setLoginUser()\r\n    this.$bus.$on('handleShowAddDialog',this.handleShowAddDialog) //接受弹出的通知\r\n  },\r\n  beforeDestroy(){\r\n    this.$bus.$off('handleShowAddDialog')\r\n  }\r\n}\r\n</script>\r\n\r\n<style  scoped>\r\n.red{\r\n    color: red;\r\n}</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}