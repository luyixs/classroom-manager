{"ast":null,"code":"import Cookies from 'js-cookie';\nimport axios from 'axios';\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      editDialogVisible: false,\n      //编辑对话框\n\n      lectureOptions: {\n        week: ['周一', '周二', '周三', '周四', '周五'],\n        section: ['第一大节', '第二大节', '第三大节', '第四大节', '第五大节', '第六大节'],\n        // myLectures: [{cId: 'qwe123', cName: 'java'}, {cId: 'asd123', cName: 'C#'}],\n        myLectures: [],\n        credit: [1, 2, 3, 4],\n        academy: ['全部', '计算机学院', '艺术学院', '医学院', '理学院'],\n        lectureDayofWeek: '周一',\n        lectureSection: '第一大节'\n      },\n      lectureData: {\n        cId: '',\n        cName: '',\n        teacherId: '',\n        //从后台获取\n        credit: null,\n        limit: null,\n        classRoom: '',\n        timeRange: '',\n        type: '必修',\n        academy: '',\n        cIntro: '课程介绍...'\n      }\n    };\n  },\n  watch: {\n    lectureOptions: {\n      deep: true,\n      immediate: true,\n      handler(newVal, oldVal) {\n        this.lectureData.timeRange = newVal.lectureDayofWeek + '_' + newVal.lectureSection;\n      }\n    }\n  },\n  computed: {},\n  methods: {\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n    handleShowEditDialog(lecture) {\n      this.lectureData = lecture; //将选中的课程传给lectureData\n      this.editDialogVisible = true;\n    },\n    //编辑课程\n    handleUpdateLecture() {\n      // console.log(this.lectureData)\n      axios({\n        method: 'POST',\n        url: '/lecture/upd',\n        data: this.lectureData\n      }).then(rsp => {\n        console.log(rsp.data);\n        if (rsp.data.success) {\n          this.$message({\n            message: '编辑成功！',\n            type: 'success'\n          });\n          this.editDialogVisible = false;\n        } else {\n          this.$message(\"编辑失败\");\n        }\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {\n        this.$bus.$emit('getLectureList', ''); //通知leccture组件更新数据\n      });\n    }\n  },\n\n  created() {},\n  mounted() {\n    console.log('EditLecture 挂载');\n    this.$bus.$on('handleShowEditDialog', this.handleShowEditDialog); //接受弹出的通知\n  },\n\n  beforeDestroy() {\n    this.$bus.$off('handleShowEditDialog');\n  }\n};","map":{"version":3,"mappings":"AA+DA;AACA;AACA;EACAA;EACAC;EACAC;IACA;MAEAC;MAAA;;MAEAC;QACAC;QACAC;QACA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAC;QACAC;QACAC;QAAA;QACAP;QACAQ;QACAC;QACAC;QACAC;QACAV;QACAW;MACA;IAEA;EACA;EACAC;IACAjB;MACAkB;MACAC;MACAC;QACA;MACA;IACA;EACA;EACAC;EACAC;IACAC;MACA;QACAC;MACA,eACA;IACA;IACAC;MACA;MACA;IAEA;IACA;IACAC;MACA;MACAC;QAAAC;QAAAC;QAAA/B;MAAA;QACAgC;QACA;UACA;YAAAC;YAAAhB;UAAA;UACA;QACA;UACA;QACA;MACA;QACA;MACA;QACA;MACA;IACA;EAEA;;EAGAiB;EACAC;IACAH;IACA;EACA;;EACAI;IACA;EACA;AACA","names":["components","props","data","editDialogVisible","lectureOptions","week","section","myLectures","credit","academy","lectureDayofWeek","lectureSection","lectureData","cId","cName","teacherId","limit","classRoom","timeRange","type","cIntro","watch","deep","immediate","handler","computed","methods","handleClose","done","handleShowEditDialog","handleUpdateLecture","axios","method","url","console","message","created","mounted","beforeDestroy"],"sourceRoot":"src/components/MyLecture","sources":["EditLecture.vue"],"sourcesContent":["<template>\r\n  <!--编辑对话框-->\r\n  <el-dialog th:title=\"编辑课程\" :visible.sync=\"editDialogVisible\" width=\"500px\" :before-close=\"handleClose\">\r\n\r\n    <el-form label-width=\"80px\" :model=\"lectureData\"  method=\"post\">\r\n      <el-form-item label=\"教师ID:\">\r\n        <el-input th:text=\"${session.loginUser.getId()}\" v-model=\"lectureData.teacherId\" :disabled=\"true\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"课程ID:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入课程ID\" v-model=\"lectureData.cId\" :disabled=\"true\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"课程名称:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入课程名称\" v-model=\"lectureData.cName\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"学分:\" size=\"medium\" style=\"width: 280px;\">\r\n        <el-select v-model=\"lectureData.credit\" placeholder=\"请选择\">\r\n          <el-option v-for=\"item in lectureOptions.credit\" :key=\"item\" :label=\"item\" :value=\"item\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"人数限制:\" size=\"medium\">\r\n        <el-input-number v-model=\"lectureData.limit\" controls-position=\"right\" :min=\"1\" :max=\"200\">\r\n        </el-input-number>\r\n      </el-form-item>\r\n      <el-form-item label=\"教室:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入教室\" v-model=\"lectureData.classRoom\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"上课时间:\" size=\"medium\">\r\n        <el-select v-model=\"lectureOptions.lectureDayofWeek\" placeholder=\"周一\" size=\"mini\" style=\"width: 100px;\">\r\n          <el-option v-for=\"day in lectureOptions.week \" :key=\"day\" :label=\"day\" :value=\"day\"></el-option>\r\n        </el-select>\r\n        <el-select v-model=\"lectureOptions.lectureSection\" placeholder=\"第一大节\" size=\"mini\" style=\"width: 100px;\">\r\n          <el-option v-for=\"section in lectureOptions.section\" :key=\"section\" :label=\"section\" :value=\"section\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"选修类型\" size=\"medium\">\r\n        <el-radio v-model=\"lectureData.type\" label=\"必修\">必修</el-radio>\r\n        <el-radio v-model=\"lectureData.type\" label=\"选修\">选修</el-radio>\r\n      </el-form-item>\r\n      <el-form-item label=\"可选院系:\" size=\"medium\">\r\n        <el-select v-model=\"lectureData.academy\" placeholder=\"院系\" size=\"mini\" style=\"width: 100px;\">\r\n          <el-option v-for=\"academy in lectureOptions.academy\" :key=\"academy\" :label=\"academy\" :value=\"academy\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"课程介绍:\">\r\n        <el-input type=\"textarea\" placeholder=\"请输入课程介绍...\" v-model=\"lectureData.cIntro\" maxlength=\"200\" show-word-limit>\r\n        </el-input>\r\n\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"handleUpdateLecture\">确 定</el-button>\r\n    </span>\r\n\r\n\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios';\r\nexport default {\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n\r\n      editDialogVisible: false, //编辑对话框\r\n\r\n      lectureOptions: {\r\n        week: ['周一', '周二', '周三', '周四', '周五'],\r\n        section: ['第一大节', '第二大节', '第三大节', '第四大节', '第五大节', '第六大节'],\r\n        // myLectures: [{cId: 'qwe123', cName: 'java'}, {cId: 'asd123', cName: 'C#'}],\r\n        myLectures: [],\r\n        credit: [1, 2, 3, 4],\r\n        academy: ['全部', '计算机学院', '艺术学院', '医学院', '理学院'],\r\n        lectureDayofWeek: '周一',\r\n        lectureSection: '第一大节',\r\n      },\r\n\r\n      lectureData: {\r\n        cId: '',\r\n        cName: '',\r\n        teacherId: '', //从后台获取\r\n        credit: null,\r\n        limit: null,\r\n        classRoom: '',\r\n        timeRange: '',\r\n        type: '必修',\r\n        academy: '',\r\n        cIntro: '课程介绍...',\r\n      },\r\n\r\n    };\r\n  },\r\n  watch: {\r\n    lectureOptions: {\r\n      deep: true,\r\n      immediate: true,\r\n      handler(newVal, oldVal) {\r\n        this.lectureData.timeRange = newVal.lectureDayofWeek + '_' + newVal.lectureSection\r\n      }\r\n    }\r\n  },\r\n  computed: {},\r\n  methods: {\r\n    handleClose(done) {\r\n      this.$confirm('确认关闭？').then(_ => {\r\n        done();\r\n      }).catch(_ => {\r\n      });\r\n    },\r\n    handleShowEditDialog(lecture) {\r\n      this.lectureData = lecture //将选中的课程传给lectureData\r\n      this.editDialogVisible = true\r\n\r\n    },\r\n    //编辑课程\r\n    handleUpdateLecture() {\r\n      // console.log(this.lectureData)\r\n      axios({ method: 'POST', url: '/lecture/upd', data: this.lectureData }).then(rsp => {\r\n        console.log(rsp.data)\r\n        if (rsp.data.success) {\r\n          this.$message({ message: '编辑成功！', type: 'success' });\r\n          this.editDialogVisible = false;\r\n        } else {\r\n          this.$message(\"编辑失败\")\r\n        }\r\n      }, err => {\r\n        this.$message.error(err.message)\r\n      }).finally(() => {\r\n        this.$bus.$emit('getLectureList','') //通知leccture组件更新数据\r\n      })\r\n    },\r\n\r\n  },\r\n\r\n\r\ncreated() { },\r\nmounted() {\r\n  console.log('EditLecture 挂载')\r\n  this.$bus.$on('handleShowEditDialog', this.handleShowEditDialog) //接受弹出的通知\r\n},\r\nbeforeDestroy(){\r\n  this.$bus.$off('handleShowEditDialog')\r\n}\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}