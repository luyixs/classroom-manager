{"ast":null,"code":"import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { nanoid } from 'nanoid';\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      loginUser: null,\n      dialogVisible: false,\n      signInData: {\n        siCode: '',\n        cId: '',\n        uId: '',\n        createTime: '',\n        expire: ''\n      },\n      myLectures: []\n    };\n  },\n  watch: {},\n  computed: {},\n  methods: {\n    showSignInDialog(myLectureList) {\n      this.dialogVisible = true;\n      this.myLectures = myLectureList;\n    },\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n    handleAddSignIn() {\n      this.signInData.uId = this.loginUser.id;\n      let date = new Date();\n      this.signInData.createTime = date.toLocaleString();\n      axios({\n        method: 'POST',\n        url: '/signin/create',\n        data: {\n          signInData: this.signInData\n        }\n      }).then(rsp => {\n        if (rsp.data.success) {\n          this.$message({\n            message: '已创建签到！请通知学生签到',\n            type: 'success'\n          });\n          this.$alert('这是签到码: ' + this.signInData.siCode + ' 请通知您的学生签到', '签到码', {\n            confirmButtonText: '确定'\n          });\n          this.$bus.$emit('handleSetSignCode', this.signInData);\n          this.$bus.$emit('updateSignState', rsp.data.data.userSignStates);\n        }\n        console.log(rsp.data);\n        this.dialogVisible = false;\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {});\n      // console.log(this.signInData);\n    },\n\n    handleChangeCourseId() {},\n    refreshSignInCode() {\n      this.signInData.siCode = nanoid(6);\n    },\n    setLoginUser() {\n      this.loginUser = this.getCookie('loginUser');\n    },\n    setCookie(key, value) {\n      Cookies.set(key, JSON.stringify(value));\n    },\n    getCookie(key) {\n      let cookieValue = Cookies.get(key);\n      if (cookieValue == undefined) {\n        return null; //cookie未定义\n      }\n\n      return JSON.parse(Cookies.get(key));\n    }\n  },\n  created() {},\n  mounted() {\n    console.log('mounted');\n    this.setLoginUser();\n    this.$bus.$on('showSignInDialog', this.showSignInDialog);\n  },\n  beforeDestroy() {\n    this.$bus.$off('showSignInDialog');\n  }\n};","map":{"version":3,"mappings":"AAiEA;AACA;AACA;AAEA;EACAA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;IACA;EACA;EACAC;EACAC;EACAC;IAIAC;MACA;MACA;IAEA;IAEAC;MACA;QACAC;MACA,eACA;IACA;IACAC;MACA;MACA;MACA;MAEAC;QAAAC;QAAAC;QAAAnB;UAAAG;QAAA;MAAA;QACA;UACA;YAAAiB;YAAAC;UAAA;UACA;YAAAC;UAAA;UACA;UACA;QAEA;QAEAC;QACA;MACA;QAAA;MAAA,kBAEA;MACA;IACA;;IACAC;IACAC;MACA;IACA;IAEAC;MACA;IACA;IACAC;MACAC;IACA;IACAC;MACA;MACA;QACA;MACA;;MACA;IACA;EAEA;EACAC;EACAC;IAEAR;IACA;IAGA;EACA;EACAS;IACA;EACA;AACA","names":["components","props","data","loginUser","dialogVisible","signInData","siCode","cId","uId","createTime","expire","myLectures","watch","computed","methods","showSignInDialog","handleClose","done","handleAddSignIn","axios","method","url","message","type","confirmButtonText","console","handleChangeCourseId","refreshSignInCode","setLoginUser","setCookie","Cookies","getCookie","created","mounted","beforeDestroy"],"sourceRoot":"src/components/SignIn","sources":["AddSignIn.vue"],"sourcesContent":["<template>\r\n  <!--发起签到对话框  -->\r\n  <el-dialog title=\"发起签到\" :visible.sync=\"dialogVisible\" width=\"500px\" :before-close=\"handleClose\">\r\n    <el-form label-width=\"80px\" :model=\"signInData\" method=\"post\" size=\"medium\">\r\n      <el-form-item label=\"教师ID:\">\r\n        <el-input v-if=\"loginUser != null\" v-model=\"loginUser.id\" :disabled=\"true\"></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"课程ID:\" size=\"medium\">\r\n        <el-select v-model=\"signInData.cId\" placeholder=\"请选择\">\r\n          <el-option v-for=\"lecture in myLectures\" :key=\"lecture.cId\" :label=\"lecture.cName\" :value=\"lecture.cId\">\r\n            <span style=\"float: left\">{{ lecture.cName }}</span>\r\n            <span style=\"float: right; color: #8492a6; font-size: 12px\">{{ lecture.cId }}</span>\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"限时:\" size=\"medium\">\r\n        <el-input-number v-model=\"signInData.expire\" controls-position=\"right\" :min=\"1\" :max=\"60\">\r\n        </el-input-number>分钟\r\n      </el-form-item>\r\n      <el-form-item label=\"签到码:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入内容\" v-model=\"signInData.siCode\" :disabled=\"false\">\r\n          <el-button slot=\"append\" icon=\"el-icon-refresh\" @click=\"refreshSignInCode\"></el-button>\r\n        </el-input>\r\n      </el-form-item>\r\n\r\n\r\n\r\n\r\n      <!-- <el-form-item label=\"课程名称:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入课程名称\" v-model=\"lectureData.cName\" clearable></el-input>\r\n      </el-form-item>\r\n\r\n            <el-form-item label=\"时间限制:\" size=\"medium\" style=\"width: 280px;\">\r\n        <el-select v-model=\"signInData.expire\" placeholder=\"请选择\">\r\n          <el-option v-for=\"item in 20\" :key=\"item\" :label=\"item\" :value=\"item\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n\r\n\r\n      <el-form-item label=\"教室:\" size=\"medium\">\r\n        <el-input placeholder=\"请输入教室\" v-model=\"lectureData.classRoom\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"上课时间:\" size=\"medium\">\r\n        <el-select v-model=\"lectureOptions.lectureDayofWeek\" placeholder=\"周一\" size=\"mini\" style=\"width: 100px;\">\r\n          <el-option v-for=\"day in lectureOptions.week \" :key=\"day\" :label=\"day\" :value=\"day\"></el-option>\r\n        </el-select>\r\n        <el-select v-model=\"lectureOptions.lectureSection\" placeholder=\"第一大节\" size=\"mini\" style=\"width: 100px;\">\r\n          <el-option v-for=\"section in lectureOptions.section\" :key=\"section\" :label=\"section\" :value=\"section\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item> -->\r\n    </el-form>\r\n\r\n\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n      <el-button type=\"primary\" @click=\"handleAddSignIn\">确 定</el-button>\r\n    </span>\r\n\r\n  </el-dialog>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios';\r\nimport { nanoid } from 'nanoid';\r\n\r\nexport default {\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n      loginUser: null,\r\n      dialogVisible: false,\r\n      signInData: {\r\n        siCode: '',\r\n        cId: '',\r\n        uId: '',\r\n        createTime: '',\r\n        expire: ''\r\n      },\r\n      myLectures: []\r\n    };\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {\r\n\r\n\r\n\r\n    showSignInDialog(myLectureList) {\r\n      this.dialogVisible = true\r\n      this.myLectures = myLectureList\r\n\r\n    },\r\n\r\n    handleClose(done) {\r\n      this.$confirm('确认关闭？').then(_ => {\r\n        done();\r\n      }).catch(_ => {\r\n      });\r\n    },\r\n    handleAddSignIn() {\r\n      this.signInData.uId = this.loginUser.id;\r\n      let date = new Date();\r\n      this.signInData.createTime = date.toLocaleString();\r\n\r\n      axios({ method: 'POST', url: '/signin/create', data: { signInData: this.signInData } }).then(rsp => {\r\n        if (rsp.data.success) {\r\n          this.$message({ message: '已创建签到！请通知学生签到', type: 'success' })\r\n          this.$alert('这是签到码: ' + this.signInData.siCode + ' 请通知您的学生签到', '签到码', { confirmButtonText: '确定', });\r\n          this.$bus.$emit('handleSetSignCode',this.signInData)\r\n          this.$bus.$emit('updateSignState',rsp.data.data.userSignStates)\r\n          \r\n        }\r\n        \r\n        console.log(rsp.data);\r\n        this.dialogVisible = false\r\n      }, err => { this.$message.error(err.message) }).finally(() => {\r\n\r\n      })\r\n      // console.log(this.signInData);\r\n    },\r\n    handleChangeCourseId() { },\r\n    refreshSignInCode() {\r\n      this.signInData.siCode = nanoid(6)\r\n    },\r\n\r\n    setLoginUser() {\r\n      this.loginUser = this.getCookie('loginUser')\r\n    },\r\n    setCookie(key, value) {\r\n      Cookies.set(key, JSON.stringify(value))\r\n    },\r\n    getCookie(key) {\r\n      let cookieValue = Cookies.get(key)\r\n      if (cookieValue == undefined) {\r\n        return null //cookie未定义\r\n      }\r\n      return JSON.parse(Cookies.get(key))\r\n    },\r\n\r\n  },\r\n  created() { },\r\n  mounted() {\r\n\r\n    console.log('mounted');\r\n    this.setLoginUser()\r\n\r\n\r\n    this.$bus.$on('showSignInDialog', this.showSignInDialog)\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off('showSignInDialog')\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}