{"ast":null,"code":"import axios from 'axios';\nexport default {\n  components: {},\n  props: ['noteList', 'editMode'],\n  data() {\n    return {\n      // noteList: null,\n      myNoteList: []\n    };\n  },\n  watch: {},\n  computed: {},\n  methods: {\n    handleToDetail(nId) {},\n    handleEdit(note) {\n      // console.log(note)\n      //向Note组件发送消息进入编辑模式\n      this.$bus.$emit('handleSetEditorVisible', true);\n      //将note传入EditNote组件中\n      this.$nextTick(function () {\n        this.$bus.$emit('handleSetNote', note);\n      });\n    },\n    handleDelete(nId) {\n      console.log(nId);\n      axios({\n        method: 'DELETE',\n        url: '/note/del',\n        data: nId\n      }).then(rsp => {\n        console.log(rsp.data);\n        this.$bus.$emit('getNotes');\n        this.$bus.$emit('getMyNotes');\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {});\n    }\n  },\n  created() {},\n  mounted() {\n    // console.log(this.noteList);\n  }\n};","map":{"version":3,"mappings":"AAuBA;AACA;EACAA;EACAC;EACAC;IACA;MACA;MACAC;IACA;EACA;EACAC;EACAC;EACAC;IAEAC,qBACA;IAGAC;MACA;MACA;MACA;MACA;MACA;QACA;MACA;IACA;IAEAC;MACAC;MACAC;QAAAC;QAAAC;QAAAX;MAAA,QACAY;QACAJ;QACA;QAAA;MACA,GACAK;QAAA;MAAA,kBAEA;IACA;EAEA;EACAC;EACAC;IACA;EAAA;AAEA","names":["components","props","data","myNoteList","watch","computed","methods","handleToDetail","handleEdit","handleDelete","console","axios","method","url","rsp","err","created","mounted"],"sourceRoot":"src/components/Note","sources":["NoteList.vue"],"sourcesContent":["<template>\r\n  <div class=\"note-container\">\r\n    <div class=\"note-item\" v-for=\"note in noteList \" :key=\"note.nId\" @click=\"handleToDetail(note.nId)\">\r\n      <div>\r\n        <!-- <router-link :to=\"{path:'/detail',query:{nId:note.nId}}\">{{ note.title }}</router-link> -->\r\n        <h3 class=\"title\">\r\n          <router-link class=\"title-link\" :to=\"{ name: 'd', params: { nId: note.nId } }\">{{ note.title }}</router-link>\r\n          <div class=\"tag-container\">\r\n            <el-tag v-for=\"tag in note.tag\" :key=\"tag\" effect=\"light\" size=\"mini\">{{ tag }}</el-tag>\r\n          </div>\r\n        </h3>\r\n      </div>\r\n      <div class=\"info\"><span class=\"author\">笔者：{{ note.uId }}&nbsp;&nbsp; 编辑于：{{ note.editTime }}</span></div>\r\n      <div class=\"content\">{{ note.content }}</div>\r\n      <div class=\"operation\" v-if=\"editMode\">\r\n        <el-button icon=\"el-icon-edit\" circle @click=\"handleEdit(note)\"></el-button>\r\n        <el-button icon=\"el-icon-delete\" circle @click=\"handleDelete(note.nId)\"></el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  components: {},\r\n  props: ['noteList', 'editMode'],\r\n  data() {\r\n    return {\r\n      // noteList: null,\r\n      myNoteList: [],\r\n    };\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {\r\n\r\n    handleToDetail(nId) {\r\n    },\r\n\r\n\r\n    handleEdit(note) {\r\n      // console.log(note)\r\n      //向Note组件发送消息进入编辑模式\r\n      this.$bus.$emit('handleSetEditorVisible',true)\r\n      //将note传入EditNote组件中\r\n      this.$nextTick(function(){\r\n        this.$bus.$emit('handleSetNote',note)\r\n      })\r\n    },\r\n\r\n    handleDelete(nId) {\r\n      console.log(nId)\r\n      axios({ method: 'DELETE', url: '/note/del', data: nId }).then(\r\n        rsp => {\r\n          console.log(rsp.data)\r\n          this.$bus.$emit('getNotes'); this.$bus.$emit('getMyNotes')\r\n        },\r\n        err => { this.$message.error(err.message) }).finally(() => {\r\n\r\n        })\r\n    }\r\n\r\n  },\r\n  created() { },\r\n  mounted() {\r\n    // console.log(this.noteList);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.note-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.note-item {\r\n  height: 100px;\r\n  width: 95%;\r\n  background-color: rgb(255, 255, 255);\r\n  box-shadow: 0px 0px 5px 5px #f1f1f1;\r\n  /* border: 1px solid red; */\r\n  margin: 10px 0px;\r\n  border-radius: 10px;\r\n  transition: .3s;\r\n  padding: 0px 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n\r\n.note-item:hover {\r\n  box-shadow: 0px 0px 5px 5px #dcdcdc;\r\n}\r\n\r\n.tag-container {\r\n  /* border: 1px solid red; */\r\n  display: inline-block;\r\n  position: absolute;\r\n  right: 20px;\r\n}\r\n\r\n.el-tag {\r\n  margin: 0px 2px;\r\n  /* text-align: end; */\r\n  display: inline-block;\r\n  /* border: 1px solid red; */\r\n}\r\n\r\n.info {\r\n  /* border: 1px solid red; */\r\n  margin: 0px;\r\n}\r\n\r\n.author {\r\n  color: #999999;\r\n  font-size: 12px;\r\n}\r\n\r\n.title {\r\n  /* border: 1px solid red; */\r\n  margin-bottom: 0px;\r\n  position: relative;\r\n}\r\n\r\n.title-link {\r\n  color: #333333;\r\n  text-decoration: none;\r\n  transition: .2s;\r\n}\r\n\r\n.title-link:hover {\r\n  color: #8898d3;\r\n}\r\n\r\n.content {\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n  color: #585858;\r\n  /* border: 1px solid red; */\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n}\r\n\r\n.operation {\r\n  position: absolute;\r\n  right: 0px;\r\n  bottom: -50px;\r\n  margin-right: 20px;\r\n  /* border: 1px solid red; */\r\n  /* height: 100%; */\r\n  transition: .2s;\r\n}\r\n\r\n.note-item:hover .operation {\r\n  transform: translateY(-60px);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}