{"ast":null,"code":"import Cookies from 'js-cookie';\nexport default {\n  components: {},\n  props: [],\n  data() {\n    return {\n      sendMsg: {\n        isMassMsg: true,\n        from: '',\n        to: '',\n        text: ''\n      },\n      chatMsg: [],\n      loginUser: null\n    };\n  },\n  watch: {},\n  computed: {},\n  methods: {\n    setLoginUser(loginUser) {\n      this.loginUser = loginUser;\n    },\n    handleSend() {\n      if (this.loginUser == null) {\n        this.$message('未登录，请登录后使用该功能');\n        return;\n      }\n      this.sendMsg.from = this.loginUser.id;\n      this.$bus.$emit('handleSendMsg', this.sendMsg);\n      this.sendMsg.text = '';\n    },\n    handleReceive(chatMsg) {\n      // console.log('ChatInput handleReceive收到消息:' + chatMsg)\n      this.chatMsg = chatMsg;\n    }\n  },\n  created() {},\n  mounted() {\n    this.$bus.$on(\"handleReceive\", this.handleReceive);\n    this.$bus.$on(\"setLoginUser\", this.setLoginUser);\n  },\n  beforeDestroy() {\n    this.$bus.$off('handleReceive');\n    this.$bus.$off('setLoginUser');\n  }\n};","map":{"version":3,"mappings":"AA+BA;AACA;EACAA;EACAC;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;IACA;EACA;EACAC;EACAC;EACAC;IAEAC;MACA;IACA;IAEAC;MACA;QACA;QACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;IACA;EAGA;EACAC;EACAC;IACA;IACA;EACA;EACAC;IACA;IACA;EACA;AAEA","names":["components","props","data","sendMsg","isMassMsg","from","to","text","chatMsg","loginUser","watch","computed","methods","setLoginUser","handleSend","handleReceive","created","mounted","beforeDestroy"],"sourceRoot":"src/components/ChatRoom","sources":["ChatInput.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-container\">\r\n    <div class=\"chat-msg\">\r\n      <ul>\r\n        <li class=\"chat-msg-item\" v-for=\"item in chatMsg\">\r\n\r\n          <div class=\"chat-msg-other\" v-if=\"item.from != loginUser.id\">\r\n            <el-avatar size=\"large\"> {{ item.from }}</el-avatar>\r\n            <div class=\"chat-msg-other-text chat-text\">{{ item.text }}</div>\r\n          </div>\r\n          <div class=\"chat-msg-own\" v-if=\"item.from == loginUser.id\">\r\n            <div class=\"chat-msg-own-text chat-text\">{{ item.text }}</div>\r\n            <el-avatar size=\"large\">{{ item.from }}</el-avatar>\r\n          </div>\r\n\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div class=\"chat-input\">\r\n\r\n      <el-input class=\"textarea\" type=\"textarea\" @keyup.ctrl.enter.native=\"handleSend\" :rows=\"4\" placeholder=\"请输入内容(Ctrl+Enter发送)\" v-model=\"sendMsg.text\"  clearable>\r\n      </el-input>\r\n      <el-button class=\"sendbtn\" icon=\"el-icon-s-promotion\" circle @click=\"handleSend\"></el-button>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from 'js-cookie'\r\nexport default {\r\n  components: {},\r\n  props: [],\r\n  data() {\r\n    return {\r\n      sendMsg: {\r\n        isMassMsg: true,\r\n        from: '',\r\n        to: '',\r\n        text: '',\r\n      },\r\n      chatMsg: [],\r\n      loginUser: null\r\n    }\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {\r\n\r\n    setLoginUser(loginUser) {\r\n      this.loginUser = loginUser\r\n    },\r\n\r\n    handleSend() {\r\n      if(this.loginUser==null){\r\n        this.$message('未登录，请登录后使用该功能')\r\n        return\r\n      }\r\n      this.sendMsg.from = this.loginUser.id\r\n      this.$bus.$emit('handleSendMsg', this.sendMsg)\r\n      this.sendMsg.text = ''\r\n    },\r\n    handleReceive(chatMsg) {\r\n      // console.log('ChatInput handleReceive收到消息:' + chatMsg)\r\n      this.chatMsg = chatMsg\r\n    },\r\n\r\n\r\n  },\r\n  created() { },\r\n  mounted() {\r\n    this.$bus.$on(\"handleReceive\", this.handleReceive)\r\n    this.$bus.$on(\"setLoginUser\", this.setLoginUser)\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off('handleReceive')\r\n    this.$bus.$off('setLoginUser')\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  width: 70%;\r\n  height: 55vh;\r\n  /* border: 1px solid red; */\r\n\r\n}\r\n\r\n.chat-msg {\r\n  height: 40vh;\r\n  border: 1px solid rgb(231, 231, 231);\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  overflow: hidden scroll;\r\n  scrollbar-width: none;\r\n  /* firefox 隐藏滚动条*/\r\n  -ms-overflow-style: none;\r\n  /*IE 10+ 隐藏滚动条*/\r\n}\r\n\r\n.chat-msg ul{\r\n  /* border: 1px solid red; */\r\n  padding: 0;\r\n  \r\n}\r\n\r\n.chat-msg::-webkit-scrollbar {\r\n  display: none;\r\n  /*Chrome fafari 隐藏滚动条*/\r\n}\r\n\r\n.chat-input {\r\n  height: 100px;\r\n  /* background-color: rgb(231, 231, 231); */\r\n  /* border: 1px solid rgb(32, 104, 111); */\r\n  position: relative;\r\n  /* overflow: hidden; */\r\n}\r\n\r\n.chat-msg-item {\r\n  width: 100%;\r\n  /* border: 1px solid; */\r\n  list-style: none;\r\n  /* margin: 5px 0px 0px 0px; */\r\n}\r\n\r\n.chat-msg-other {\r\n  display: flex;\r\n  justify-content: start;\r\n  align-items: center;\r\n}\r\n\r\n.chat-msg-own {\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n}\r\n\r\n.chat-text {\r\n  background-color: rgb(117, 222, 117);\r\n  color: rgb(93, 91, 91);\r\n  font-size: 12px;\r\n  font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  border-radius: 30px;\r\n  padding: 0px 5px;\r\n}\r\n\r\n.chat-msg-other-text,.chat-msg-own-text{\r\n  margin:0px  10px;\r\n\r\n}\r\n\r\n.chat-msg-own-text {\r\n  /* margin-right: 5px; */\r\n}\r\n\r\n\r\n\r\n.sendbtn {\r\n  position: absolute;\r\n  right: 10px;\r\n  bottom: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}