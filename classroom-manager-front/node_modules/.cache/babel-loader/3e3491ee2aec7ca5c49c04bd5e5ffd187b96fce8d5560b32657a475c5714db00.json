{"ast":null,"code":"import axios from 'axios';\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      searchWord: '',\n      myLectureList: []\n    };\n  },\n  watch: {},\n  computed: {},\n  methods: {\n    //获取我的授课列表\n    getLectureList(condition) {\n      console.log('getLectureList run...');\n      axios({\n        method: 'GET',\n        url: '/lecture/list',\n        params: {\n          q: condition\n        }\n      }).then(rsp => {\n        console.log(rsp.data);\n        if (rsp.data.success) this.myLectureList = rsp.data.data;\n      }, err => {\n        this.$message.error(err.message);\n      });\n    },\n    //查询\n    handleSearch() {\n      this.getLectureList(this.searchWord);\n    },\n    //删除课程\n    handleDeleteLecture(cId) {\n      this.$message(cId);\n      axios({\n        method: 'DELETE',\n        url: '/lecture/del',\n        params: {\n          cId: cId\n        }\n      }).then(rsp => {\n        console.log(rsp.data);\n        if (rsp.data.success) this.$message({\n          message: '删除成功！',\n          type: 'success'\n        });\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {\n        this.getLectureList(\"\");\n      });\n    },\n    //弹出添加课程对话框\n    handleOpenAddDialog() {\n      this.$bus.$emit('handleShowAddDialog');\n    },\n    //弹出编辑课程对话框\n    handleOpenEditDialog(course) {\n      this.$bus.$emit('handleShowEditDialog', course);\n    }\n  },\n  created() {},\n  mounted() {\n    console.log('Lecture 挂载');\n    this.getLectureList('');\n    this.$bus.$on('getLectureList', this.getLectureList);\n  },\n  beforeDestroy() {\n    this.$bus.$off('getLectureList');\n  }\n};","map":{"version":3,"mappings":"AAmCA;AACA;EACAA;EACAC;EACAC;IACA;MACAC;MACAC;IAEA;EACA;EACAC;EACAC;EACAC;IACA;IACAC;MACAC;MACAC;QAAAC;QAAAC;QAAAC;UAAAC;QAAA;MAAA;QACAL;QACA;MACA;QACA;MACA;IACA;IACA;IACAM;MACA;IACA;IAEA;IACAC;MACA;MACAN;QAAAC;QAAAC;QAAAC;UAAAI;QAAA;MAAA;QACAR;QACA;UAAAS;UAAAC;QAAA;MACA;QACA;MACA;QACA;MACA;IAEA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;IACA;EACA;EACAC,WACA;EACAC;IACAd;IACA;IACA;EACA;EACAe;IACA;EACA;AACA","names":["components","props","data","searchWord","myLectureList","watch","computed","methods","getLectureList","console","axios","method","url","params","q","handleSearch","handleDeleteLecture","cId","message","type","handleOpenAddDialog","handleOpenEditDialog","created","mounted","beforeDestroy"],"sourceRoot":"src/components/MyLecture","sources":["Lecture.vue"],"sourcesContent":["<template>\r\n  <el-main>\r\n    <h2>我的授课</h2>\r\n    <div>\r\n      <span>查询：</span>\r\n      <el-input placeholder=\"Search...\" size=\"medium\" style=\"width: 200px;\" suffix-icon=\"el-icon-search\"\r\n        v-model=\"searchWord\">\r\n      </el-input>\r\n      <el-button round type=\"primary\" size=\"medium\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\r\n      <el-button round type=\"primary\" size=\"medium\" icon=\"el-icon-plus\" @click=\"handleOpenAddDialog\">添加授课\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-divider></el-divider>\r\n\r\n    <div class=\"lecture-container\">\r\n      <div class=\"lecture-item\" v-for=\"lecture in myLectureList\">\r\n        <h4>{{ lecture.cName }}</h4>\r\n        <span>课程ID：{{ lecture.cId }}</span><br>\r\n        <span>教师ID：{{ lecture.teacherId }}</span>\r\n        <div class=\"btn-group\">\r\n          <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"handleOpenEditDialog(lecture)\"></el-button>\r\n          <template>\r\n            <el-popconfirm @confirm=\"handleDeleteLecture(lecture.cId)\" icon=\"el-icon-info\" icon-color=\"red\"\r\n              title=\"您确定要删除该授课吗？该课程对应的所有学生的选课记录也会被删除！\">\r\n              <el-button type=\"danger\" icon=\"el-icon-delete\" circle slot=\"reference\"></el-button>\r\n            </el-popconfirm>\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </el-main>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n      searchWord: '',\r\n      myLectureList: [],\r\n\r\n    };\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {\r\n    //获取我的授课列表\r\n    getLectureList(condition) {\r\n      console.log('getLectureList run...')\r\n      axios({ method: 'GET', url: '/lecture/list', params: { q: condition } }).then(rsp => {\r\n        console.log(rsp.data)\r\n        if (rsp.data.success) this.myLectureList = rsp.data.data\r\n      }, err => {\r\n        this.$message.error(err.message)\r\n      })\r\n    },\r\n    //查询\r\n    handleSearch() {\r\n      this.getLectureList(this.searchWord)\r\n    },\r\n\r\n    //删除课程\r\n    handleDeleteLecture(cId) {\r\n      this.$message(cId)\r\n      axios({ method: 'DELETE', url: '/lecture/del', params: { cId: cId } }).then(rsp => {\r\n        console.log(rsp.data)\r\n        if (rsp.data.success) this.$message({ message: '删除成功！', type: 'success' })\r\n      }, err => {\r\n        this.$message.error(err.message)\r\n      }).finally(() => {\r\n        this.getLectureList(\"\")\r\n      })\r\n\r\n    },\r\n\r\n    //弹出添加课程对话框\r\n    handleOpenAddDialog() {\r\n      this.$bus.$emit('handleShowAddDialog')\r\n    },\r\n\r\n    //弹出编辑课程对话框\r\n    handleOpenEditDialog(course) {\r\n      this.$bus.$emit('handleShowEditDialog', course)\r\n    },\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    console.log('Lecture 挂载')\r\n    this.getLectureList('')\r\n    this.$bus.$on('getLectureList', this.getLectureList)\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off('getLectureList')\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style  scoped>\r\n/* Mylecture */\r\n\r\n/* lecture-container */\r\n.lecture-container {\r\n  /* height: 70vh; */\r\n  overflow: hidden scroll;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  /* justify-content: flex-start; */\r\n  /* background-color: rgb(186, 197, 219); */\r\n}\r\n\r\n/* lecture-item */\r\n.lecture-item {\r\n  background-color: white;\r\n  border: 1px solid #afcff6;\r\n  border-radius: 5px;\r\n  width: 220px;\r\n  height: 150px;\r\n  margin: 10px;\r\n  transition: .2s;\r\n  text-align: center;\r\n  overflow: hidden;\r\n}\r\n\r\n.lecture-item>h4 {\r\n  color: lightslategray;\r\n}\r\n\r\n.lecture-item>span {\r\n  font-size: 12px;\r\n}\r\n\r\n.lecture-item>.btn-group {\r\n  /* display: none; */\r\n  display: flex;\r\n  justify-content:space-evenly;\r\n  transform: translateY(50px);\r\n  transition: .2s;\r\n}\r\n\r\n.lecture-item:hover {\r\n  box-shadow: 5px 5px 10px #afcff6;\r\n}\r\n\r\n.lecture-item:hover .btn-group {\r\n  transform: translateY(0);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}