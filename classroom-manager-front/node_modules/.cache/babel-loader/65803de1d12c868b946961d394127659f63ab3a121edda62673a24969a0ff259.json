{"ast":null,"code":"import axios from 'axios';\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      note: {\n        nId: '',\n        uId: '',\n        title: '',\n        content: '',\n        tag: '',\n        editTime: '',\n        isPublic: false\n      }\n    };\n  },\n  watch: {},\n  computed: {},\n  methods: {\n    handleBack() {\n      this.$router.back();\n    },\n    getNoteDetail() {\n      axios({\n        method: 'GET',\n        url: '/note/detail/' + this.$route.params.nId\n      }).then(rsp => {\n        this.note = rsp.data.data;\n        this.note.tag = JSON.parse(this.note.tag);\n        console.log(this.note);\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {});\n    }\n  },\n  created() {},\n  mounted() {\n    this.getNoteDetail();\n  }\n  // beforeRouteEnter(to,from ,next){\n  //   // console.log('to:',to,'from:',from)\n  //   if(from.path=='/'){\n  //     this.$bus.$emit('handleTabVisible')\n  //   } \n  //   next()\n  // }\n};","map":{"version":3,"mappings":"AAqBA;AACA;EACAA;EACAC;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;EACAC;EACAC;IACAC;MACA;IACA;IACAC;MACAC;QAAAC;QAAAC;MAAA;QACA;QACA;QACAC;MAEA;QACA;MACA;IACA;EAEA;EACAC;EACAC;IACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA","names":["components","props","data","note","nId","uId","title","content","tag","editTime","isPublic","watch","computed","methods","handleBack","getNoteDetail","axios","method","url","console","created","mounted"],"sourceRoot":"src/components/Note","sources":["NoteDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"detail-container\">\r\n    <div class=\"header\">\r\n      <div>\r\n        <el-button icon=\"el-icon-back\" circle @click=\"handleBack\" size=\"medium\"></el-button>\r\n      </div>\r\n      <div class=\"title-box\">\r\n        <h3>{{ note.title }}</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"info\">NID:{{ note.nId }}&nbsp;|&nbsp;笔者ID:{{ note.uId }} &nbsp;|&nbsp;编辑时间:{{ note.editTime }}\r\n      &nbsp;|&nbsp; <el-tag v-for=\"tag in note.tag\" :key=\"tag\" effect=\"light\" size=\"mini\">{{ tag }}</el-tag> </div>\r\n\r\n    <div>\r\n      <mavon-editor v-model=\"note.content\"  navigation defaultOpen=\"preview\" :toolbarsFlag=\"false\" :editable=\"false\"\r\n        :subfield=\"false\"></mavon-editor>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n      note: {\r\n        nId: '',\r\n        uId: '',\r\n        title: '',\r\n        content: '',\r\n        tag: '',\r\n        editTime: '',\r\n        isPublic: false\r\n      },\r\n    };\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {\r\n    handleBack() {\r\n      this.$router.back()\r\n    },\r\n    getNoteDetail() {\r\n      axios({ method: 'GET', url: '/note/detail/' + this.$route.params.nId }).then(rsp => {\r\n        this.note = rsp.data.data\r\n        this.note.tag = JSON.parse(this.note.tag)\r\n        console.log(this.note)\r\n\r\n      }, err => {\r\n        this.$message.error(err.message)\r\n      }).finally(() => { })\r\n    }\r\n\r\n  },\r\n  created() { },\r\n  mounted() {\r\n    this.getNoteDetail()\r\n  },\r\n  // beforeRouteEnter(to,from ,next){\r\n  //   // console.log('to:',to,'from:',from)\r\n  //   if(from.path=='/'){\r\n  //     this.$bus.$emit('handleTabVisible')\r\n  //   } \r\n  //   next()\r\n  // }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.header {\r\n  /* border: 1px solid green; */\r\n  display: flex;\r\n\r\n}\r\n\r\n.title-box {\r\n  width: 100%;\r\n  /* text-align: center; */\r\n  padding: 0px;\r\n  margin-left: 50px;\r\n  border-bottom: 2px solid #728bc5;\r\n}\r\n\r\n.title-box h3 {\r\n  /* border: 1px solid red; */\r\n  margin: auto;\r\n}\r\n\r\n.el-tag {\r\n  margin: 0px 2px;\r\n  display: inline-block;\r\n}\r\n\r\n.info {\r\n  margin: 5px 0px 5px 90px;\r\n  font-size: 12px;\r\n  color: #999999;\r\n}</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}