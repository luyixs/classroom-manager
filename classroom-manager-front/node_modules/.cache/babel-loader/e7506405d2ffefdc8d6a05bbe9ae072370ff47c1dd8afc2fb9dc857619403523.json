{"ast":null,"code":"import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport NoteList from './NoteList.vue';\nimport EditNote from './EditNote.vue';\nimport NoteDetails from './NoteDetails.vue';\nexport default {\n  components: {\n    NoteList,\n    EditNote,\n    NoteDetails\n  },\n  props: {},\n  data() {\n    return {\n      loginUser: null,\n      activeName: 'notes',\n      tabVisible: true,\n      editNoteVisible: false,\n      detailVisible: false,\n      notes: [],\n      myNotes: []\n    };\n  },\n  watch: {\n    $route: {\n      immediate: true,\n      handler(to, from) {\n        // console.log(to, from);\n        if (to.path.startsWith('/d')) {\n          this.tabVisible = false;\n        } else if (to.path == '/') {\n          this.tabVisible = true;\n        }\n      }\n    }\n  },\n  computed: {},\n  methods: {\n    handleClick(tab, event) {\n      this.setLoginUser();\n      if (this.activeName == 'mynote' && this.loginUser == null) {\n        this.$message('请先登录！');\n        this.$nextTick(function () {\n          this.activeName = 'notes';\n        });\n        // return\n      }\n    },\n\n    handleSetEditorVisible(flag) {\n      this.editNoteVisible = flag;\n    },\n    handleTabVisible() {\n      // this.tabVisible = !this.tabVisible\n      // console.log(this.tabVisible)\n    },\n    getNotes() {\n      // console.log('getNotes')\n      axios({\n        method: 'GET',\n        url: '/note/list',\n        params: {}\n      }).then(rsp => {\n        if (rsp.data.success) {\n          // console.log(rsp.data.data)\n          this.notes = rsp.data.data.map(note => {\n            note.tag = JSON.parse(note.tag);\n          });\n          this.notes = rsp.data.data;\n          // console.log(this.noteList)\n        }\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {});\n    },\n    getMyNotes() {\n      // console.log('getMyNotes')\n      if (this.loginUser == null) {\n        return;\n      }\n      axios({\n        method: 'GET',\n        url: '/note/my',\n        params: {\n          \"uId\": this.loginUser.id\n        }\n      }).then(rsp => {\n        if (rsp.data.success) {\n          this.myNotes = rsp.data.data.map(note => {\n            note.tag = JSON.parse(note.tag);\n          });\n          this.myNotes = rsp.data.data;\n        }\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {});\n    },\n    setLoginUser() {\n      this.loginUser = this.getCookie('loginUser');\n    },\n    setCookie(key, value) {\n      Cookies.set(key, JSON.stringify(value));\n    },\n    getCookie(key) {\n      let cookieValue = Cookies.get(key);\n      if (cookieValue == undefined) {\n        return null; //cookie未定义\n      }\n\n      return JSON.parse(Cookies.get(key));\n    }\n  },\n  created() {},\n  mounted() {\n    this.setLoginUser();\n    this.getNotes();\n    this.getMyNotes();\n    this.$bus.$on('handleSetEditorVisible', this.handleSetEditorVisible);\n    this.$bus.$on('getNotes', this.getNotes);\n    this.$bus.$on('getMyNotes', this.getMyNotes);\n  },\n  beforeDestroy() {\n    this.$bus.$off('handleSetEditorVisible');\n    this.$bus.$off('getNotes', this.getNotes);\n    this.$bus.$off('getMyNotes', this.getMyNotes);\n  }\n};","map":{"version":3,"mappings":"AA+BA;AACA;AAGA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;IAAAC;EAAA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACAC;MACAC;QACA;QACA;UACA;QACA;UACA;QACA;MACA;IACA;EACA;EACAC;EACAC;IACAC;MACA;MACA;QACA;QACA;UACA;QACA;QACA;MACA;IAEA;;IACAC;MACA;IACA;IACAC;MACA;MACA;IAAA,CACA;IAEAC;MACA;MACAC;QAAAC;QAAAC;QAAAC;MAAA;QACA;UACA;UACA;YAAAC;UAAA;UACA;UACA;QACA;MACA;QAAA;MAAA,kBACA;IACA;IACAC;MACA;MACA;QAAA;MAAA;MACAL;QAAAC;QAAAC;QAAAC;UAAA;QAAA;MAAA;QACA;UACA;YAAAC;UAAA;UACA;QACA;MACA;QAAA;MAAA,kBACA;IACA;IAIAE;MACA;IACA;IACAC;MACAC;IACA;IACAC;MACA;MACA;QACA;MACA;;MACA;IACA;EACA;EACAC;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;AAGA","names":["components","NoteList","EditNote","NoteDetails","props","data","loginUser","activeName","tabVisible","editNoteVisible","detailVisible","notes","myNotes","watch","$route","immediate","handler","computed","methods","handleClick","handleSetEditorVisible","handleTabVisible","getNotes","axios","method","url","params","note","getMyNotes","setLoginUser","setCookie","Cookies","getCookie","created","mounted","beforeDestroy"],"sourceRoot":"src/components/Note","sources":["Note.vue"],"sourcesContent":["<template>\r\n  <el-main>\r\n\r\n    <!-- 选项卡 -->\r\n    <el-tabs v-show=\"tabVisible\" v-model=\"activeName\" @tab-click=\"handleClick\" stretch tab-position=\"top\">\r\n      <el-tab-pane label=\"推荐\" name=\"notes\">\r\n        <el-divider><i class=\"el-icon-notebook-2\"></i></el-divider>\r\n\r\n        <NoteList :noteList=\"notes\" :edit-mode=\"false\"></NoteList>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"我的\" name=\"mynote\">\r\n        <el-button circle icon=\"el-icon-plus\" @click=\"editNoteVisible = !editNoteVisible\"></el-button>\r\n        <EditNote v-if=\"editNoteVisible\"></EditNote>\r\n        <el-divider><i class=\"el-icon-notebook-2\"></i></el-divider>\r\n        <NoteList v-show=\"!editNoteVisible\" :noteList=\"myNotes\" :editMode=\"true\"></NoteList>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n    <!-- <NoteDetails v-show=\"detailVisible\"></NoteDetails> -->\r\n\r\n    <div>\r\n      <router-view></router-view>\r\n    </div>\r\n\r\n\r\n\r\n\r\n  </el-main>\r\n</template>\r\n\r\n<script>\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios';\r\n\r\n\r\nimport NoteList from './NoteList.vue';\r\nimport EditNote from './EditNote.vue';\r\nimport NoteDetails from './NoteDetails.vue';\r\n\r\nexport default {\r\n  components: { NoteList, EditNote, NoteDetails },\r\n  props: {},\r\n  data() {\r\n    return {\r\n      loginUser: null,\r\n      activeName: 'notes',\r\n      tabVisible: true,\r\n      editNoteVisible: false,\r\n      detailVisible: false,\r\n      notes: [],\r\n      myNotes: []\r\n    };\r\n  },\r\n  watch: {\r\n    $route: {\r\n      immediate: true,\r\n      handler(to, from) {\r\n        // console.log(to, from);\r\n        if (to.path.startsWith('/d')) {\r\n          this.tabVisible = false\r\n        } else if (to.path == '/') {\r\n          this.tabVisible = true\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {},\r\n  methods: {\r\n    handleClick(tab, event) {\r\n      this.setLoginUser()\r\n      if (this.activeName == 'mynote' && this.loginUser == null) {\r\n        this.$message('请先登录！')\r\n        this.$nextTick(function () {\r\n          this.activeName = 'notes'\r\n        })\r\n        // return\r\n      }\r\n\r\n    },\r\n    handleSetEditorVisible(flag) {\r\n      this.editNoteVisible = flag\r\n    },\r\n    handleTabVisible() {\r\n      // this.tabVisible = !this.tabVisible\r\n      // console.log(this.tabVisible)\r\n    },\r\n\r\n    getNotes() {\r\n      // console.log('getNotes')\r\n      axios({ method: 'GET', url: '/note/list', params: {} }).then(rsp => {\r\n        if (rsp.data.success) {\r\n          // console.log(rsp.data.data)\r\n          this.notes = rsp.data.data.map(note => { note.tag = JSON.parse(note.tag) })\r\n          this.notes = rsp.data.data\r\n          // console.log(this.noteList)\r\n        }\r\n      }, err => { this.$message.error(err.message) }).finally(() => {\r\n      })\r\n    },\r\n    getMyNotes() {\r\n      // console.log('getMyNotes')\r\n      if (this.loginUser == null) { return }\r\n      axios({ method: 'GET', url: '/note/my', params:{\"uId\":this.loginUser.id}}).then(rsp => {\r\n        if (rsp.data.success) {\r\n          this.myNotes = rsp.data.data.map(note => { note.tag = JSON.parse(note.tag) })\r\n          this.myNotes = rsp.data.data\r\n        }\r\n      }, err => { this.$message.error(err.message) }).finally(() => {\r\n      })\r\n    },\r\n\r\n    \r\n\r\n    setLoginUser() {\r\n      this.loginUser = this.getCookie('loginUser')\r\n    },\r\n    setCookie(key, value) {\r\n      Cookies.set(key, JSON.stringify(value))\r\n    },\r\n    getCookie(key) {\r\n      let cookieValue = Cookies.get(key)\r\n      if (cookieValue == undefined) {\r\n        return null //cookie未定义\r\n      }\r\n      return JSON.parse(Cookies.get(key))\r\n    },\r\n  },\r\n  created() { },\r\n  mounted() {\r\n    this.setLoginUser()\r\n    this.getNotes()\r\n    this.getMyNotes()\r\n    this.$bus.$on('handleSetEditorVisible', this.handleSetEditorVisible)\r\n    this.$bus.$on('getNotes',this.getNotes)\r\n    this.$bus.$on('getMyNotes',this.getMyNotes)\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off('handleSetEditorVisible')\r\n    this.$bus.$off('getNotes',this.getNotes)\r\n    this.$bus.$off('getMyNotes',this.getMyNotes)\r\n  },\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.relative {\r\n  position: relative;\r\n}\r\n\r\n.s {\r\n  height: 1000px;\r\n}\r\n\r\n.el-tag {\r\n  margin: 0px 2px;\r\n  /* text-align: end; */\r\n  display: inline-block;\r\n  /* border: 1px solid red; */\r\n}\r\n</style>\r\n\r\n\r\n<!--\r\n  【BUG】 根据路由动态显示tab 和detail组件\r\n\r\n\r\n\r\n -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}