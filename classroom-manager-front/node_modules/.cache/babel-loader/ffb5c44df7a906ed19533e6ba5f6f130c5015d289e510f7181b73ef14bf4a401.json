{"ast":null,"code":"import axios from 'axios';\nimport { nanoid } from 'nanoid';\nimport Cookies from 'js-cookie';\nexport default {\n  components: {},\n  props: {},\n  data() {\n    return {\n      loginUser: null,\n      searchWord: '',\n      scData: {\n        scId: '',\n        cId: '',\n        uId: '',\n        score: 0\n      },\n      //选课提交数据\n      pagination: {\n        currentPage: 1,\n        pageSize: 5,\n        total: 30\n      },\n      //分页\n      courseList: [] //选课列表\n    };\n  },\n\n  watch: {},\n  computed: {},\n  methods: {\n    getCourseList(condition) {\n      axios({\n        method: 'GET',\n        url: '/sc/list',\n        params: {\n          q: condition\n        }\n      }).then(rsp => {\n        // console.log(rsp.data)\n        if (rsp.data.success) this.courseList = rsp.data.data;\n      }, err => {\n        this.$message.error(err.message);\n      });\n    },\n    handleSelectCourse(index, row) {\n      console.log(index, row, nanoid(6));\n      this.scData.cId = row.cId;\n      this.scData.uId = this.loginUser.id;\n      this.scData.scId = nanoid(6);\n      axios({\n        method: 'post',\n        url: '/sc',\n        data: this.scData\n      }).then(rsp => {\n        console.log('rsp:', rsp.data);\n        if (rsp.data.success) {\n          this.$message({\n            message: '选课成功！',\n            type: 'success'\n          });\n        } else {\n          this.$message(\"选择失败\");\n        }\n      }, err => {\n        this.$message.error(err.message);\n      }).finally(() => {});\n      console.log('scData', this.scData);\n    },\n    //查询课程\n    handleSearch() {\n      console.log(this.searchWord);\n      this.getCourseList(this.searchWord);\n    },\n    setLoginUser() {\n      this.loginUser = this.getCookie('loginUser');\n    },\n    setCookie(key, value) {\n      Cookies.set(key, JSON.stringify(value));\n    },\n    getCookie(key) {\n      let cookieValue = Cookies.get(key);\n      if (cookieValue == undefined) {\n        return null; //cookie未定义\n      }\n\n      return JSON.parse(Cookies.get(key));\n    }\n  },\n  created() {},\n  mounted() {\n    this.setLoginUser();\n    this.getCourseList('');\n  }\n};","map":{"version":3,"mappings":"AAiCA;AACA;AACA;AACA;EACAA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAAA;MACAC;QACAC;QACAC;QACAC;MACA;MAAA;MACAC;IAEA;EACA;;EACAC;EACAC;EACAC;IACAC;MACAC;QAAAC;QAAAC;QAAAC;UAAAC;QAAA;MAAA;QACA;QACA;MACA;QACA;MACA;IACA;IAEAC;MACAC;MACA;MACA;MACA;MACAN;QACAC;QACAC;QACAnB;MACA;QACAuB;QACA;UACA;YAAAC;YAAAC;UAAA;QACA;UACA;QACA;MACA;QACA;MACA,kBACA;MACAF;IACA;IACA;IACAG;MACAH;MACA;IACA;IAEAI;MACA;IACA;IACAC;MACAC;IACA;IACAC;MACA;MACA;QACA;MACA;;MACA;IACA;EAEA;EACAC;EACAC;IACA;IACA;EACA;AACA","names":["components","props","data","loginUser","searchWord","scData","scId","cId","uId","score","pagination","currentPage","pageSize","total","courseList","watch","computed","methods","getCourseList","axios","method","url","params","q","handleSelectCourse","console","message","type","handleSearch","setLoginUser","setCookie","Cookies","getCookie","created","mounted"],"sourceRoot":"src/components","sources":["SelectCourse.vue"],"sourcesContent":["<template>\r\n  <el-main>\r\n    <h2>选课</h2>\r\n    <div>\r\n      <span>查询：</span>\r\n      <el-input placeholder=\"Search...\" size=\"medium\" style=\"width: 200px;\" suffix-icon=\"el-icon-search\"\r\n        v-model=\"searchWord\">\r\n      </el-input>\r\n      <el-button round type=\"primary\" size=\"medium\" icon=\"el-icon-search\" @click=\"handleSearch\"></el-button>\r\n    </div>\r\n    <el-divider></el-divider>\r\n    <div class=\"sc-container\">\r\n      <el-table :data=\"courseList\" style=\"width: 100%\" current-row-key=\"cId\">\r\n        <el-table-column prop=\"cId\" label=\"课程ID\" width=\"80px\"></el-table-column>\r\n        <el-table-column prop=\"cName\" label=\"课程名称\"></el-table-column>\r\n        <el-table-column prop=\"teacherId\" label=\"教师ID\"></el-table-column>\r\n        <el-table-column prop=\"credit\" label=\"学分\" width=\"50px\"></el-table-column>\r\n        <el-table-column prop=\"classRoom\" label=\"教室\"></el-table-column>\r\n        <el-table-column prop=\"limit\" label=\"人数\" width=\"50px\"></el-table-column>\r\n        <el-table-column prop=\"type\" label=\"选修类型\"></el-table-column>\r\n        <el-table-column prop=\"academy\" label=\"学院\"></el-table-column>\r\n        <el-table-column label=\"操作\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button size=\"mini\" @click=\"handleSelectCourse(scope.$index, scope.row)\">选课\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n  </el-main>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { nanoid } from 'nanoid';\r\nimport Cookies from 'js-cookie'\r\nexport default {\r\n  components: {},\r\n  props: {},\r\n  data() {\r\n    return {\r\n      loginUser:null,\r\n      searchWord: '',\r\n      scData: {\r\n        scId: '',\r\n        cId: '',\r\n        uId: '',\r\n        score: 0\r\n      },//选课提交数据\r\n      pagination: {\r\n        currentPage: 1,\r\n        pageSize: 5,\r\n        total: 30\r\n      }, //分页\r\n      courseList: [], //选课列表\r\n\r\n    };\r\n  },\r\n  watch: {},\r\n  computed: {},\r\n  methods: {\r\n    getCourseList(condition) {\r\n      axios({ method: 'GET', url: '/sc/list', params: { q: condition } }).then(rsp => {\r\n        // console.log(rsp.data)\r\n        if (rsp.data.success) this.courseList = rsp.data.data;\r\n      }, err => {\r\n        this.$message.error(err.message)\r\n      })\r\n    },\r\n\r\n    handleSelectCourse(index, row) {\r\n      console.log(index, row,nanoid(6))\r\n      this.scData.cId = row.cId;\r\n      this.scData.uId = this.loginUser.id\r\n      this.scData.scId = nanoid(6);\r\n      axios({\r\n        method: 'post',\r\n        url: '/sc',\r\n        data: this.scData\r\n      }).then(rsp => {\r\n        console.log('rsp:', rsp.data)\r\n        if (rsp.data.success) {\r\n          this.$message({ message: '选课成功！', type: 'success' });\r\n        } else {\r\n          this.$message(\"选择失败\")\r\n        }\r\n      }, err => {\r\n        this.$message.error(err.message)\r\n      }).finally(() => {\r\n      })\r\n      console.log('scData', this.scData)\r\n    },\r\n    //查询课程\r\n    handleSearch() {\r\n      console.log(this.searchWord);\r\n      this.getCourseList(this.searchWord)\r\n    },\r\n\r\n    setLoginUser() {\r\n      this.loginUser = this.getCookie('loginUser')\r\n    },\r\n    setCookie(key, value) {\r\n      Cookies.set(key, JSON.stringify(value))\r\n    },\r\n    getCookie(key) {\r\n      let cookieValue = Cookies.get(key)\r\n      if (cookieValue == undefined) {\r\n        return null //cookie未定义\r\n      }\r\n      return JSON.parse(Cookies.get(key))\r\n    },\r\n\r\n  },\r\n  created() { },\r\n  mounted() {\r\n    this.setLoginUser();\r\n    this.getCourseList('');\r\n   }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}